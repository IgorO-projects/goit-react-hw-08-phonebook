{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Container/Container.jsx","redux/actions/phonebook-actions.js","redux/actions/phonebook-operations.js","components/ContactForm/ContactForm.jsx","redux/actions/phonebook-selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","redux/actions/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deletedContactRequest","deletedContactSuccess","deletedContactError","filteredContact","event","payload","currentTarget","value","axios","defaults","baseURL","ContactForm","state","name","number","handleChange","setState","nameCheked","contacts","find","contact","onSubmit","preventDefault","props","handlePhoneAdd","items","alert","this","input","type","pattern","title","placeholder","required","onChange","button","Component","connect","dispatch","post","then","data","catch","error","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","onChangeFilter","ContactList","fetchedContacts","list","renderedContacts","map","list__item","list__text","id","list__button","onClick","deletedContactbyId","delete","get","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","contactReducer","createReducer","filterReducer","_","loadingReducer","combineReducers","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a94e561f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"list__item\":\"ContactList_list__item__2uVIv\",\"list__text\":\"ContactList_list__text__1taay\",\"list__button\":\"ContactList_list__button__2Ij86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n        <div className={styles.container}>\n            {children}\n        </div>\n    );\n};\n\nexport default Container;","// import types from './phonebook-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('phonebook/fetchContactRequest');\nexport const fetchContactSuccess = createAction('phonebook/fetchContactSuccess');\nexport const fetchContactError = createAction('phonebook/fetchContactError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deletedContactRequest = createAction('phonebook/deletedContactRequest');\nexport const deletedContactSuccess = createAction('phonebook/deletedContactSuccess');\nexport const deletedContactError = createAction('phonebook/deletedContactError');\n\nexport const filteredContact = createAction(\"phonebook/filter\", event => {\n    return {\n        payload: event.currentTarget.value\n    }\n})\n\n\n\n// export const handleContactAdd = createAction(\"phonebook/add\", contact => {\n//     return {\n//         payload: {\n//             id: uuidv4(),\n//             name: contact.name,\n//             number: contact.number,\n//         }\n//     }\n// })\n\n\n// export const deletedContact = createAction(\"phonebook/delete\")","import axios from 'axios';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deletedContactRequest,\n    deletedContactSuccess,\n    deletedContactError\n } from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => dispatch => {\n    dispatch(fetchContactRequest())\n\n    axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)))\n}\n\nexport const handleContactAdd = contact => dispatch => {\n    dispatch(addContactRequest())\n\n    axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)))\n};\n\nexport const deletedContact = id => dispatch => {\n    dispatch(deletedContactRequest())\n\n    axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deletedContactSuccess(id)))\n    .catch(error => dispatch(deletedContactError(error)))\n};","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { handleContactAdd, } from '../../redux/actions/phonebook-operations';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  }\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  nameCheked = ( contacts, name ) => {\n    return contacts.find(contact => name === contact.name);\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { handlePhoneAdd, contacts } = this.props;\n    const contact = { name, number };\n\n    if(this.nameCheked(contacts.items, name)) {\n        alert(`${name} is already in Phonebook`)\n        return;\n      }   \n\n    handlePhoneAdd(contact)\n  }\n\n  \n  render() {\n\n    return (\n      <form onSubmit={this.onSubmit} >\n        <label>\n          <br/>\n          <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Name\"\n          required\n          value={this.state.name}\n          onChange={this.handleChange}\n          />\n        </label>\n        <br/>\n        <label>\n          <br/>\n          <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"Number\"\n          required\n          value={this.state.number}\n          onChange={this.handleChange}\n          />\n        </label>\n        <br/>\n        <button\n        className={styles.button}\n        type=\"submit\"\n        >Add contact</button>\n      </form>\n  );\n  }\n};\n\nContactForm.propTypes = {\n    handlePhoneAdd: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  handlePhoneAdd: (name) => dispatch(handleContactAdd(name)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\n// export const getFilteredContacts = state => {\n//     const { contacts } = state;\n  \n//     if(contacts.filter) {\n//       const normalizedFilter = getFilter(state).toLowerCase(); \n//       const filtredContacts = contacts.items.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n//       return filtredContacts;\n//     }  \n\n//     return contacts.items;\n// }\n\nexport const getFilteredContacts = createSelector([getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase(); \n\n        if(filter) {\n            return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n        };\n\n        return contacts;\n    })","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './Filter.module.css';\nimport { filteredContact } from '../../redux/actions/phonebook-actions';\nimport { getFilter } from '../../redux/actions/phonebook-selectors';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n    return (\n        <form>\n          <label>\n            <input\n            className={styles.input}\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={onChangeFilter}\n            placeholder=\"Find person\"\n            />\n          </label>\n        </form>\n    )\n}\n\nFilter.propTypes = { \n    filter: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event => dispatch(filteredContact(event))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { fetchContacts, deletedContact } from '../../redux/actions/phonebook-operations';\nimport { Component } from 'react';\nimport{ getFilteredContacts } from '../../redux/actions/phonebook-selectors';\n\nclass ContactList extends Component {\n  \n  componentDidMount() {\n    this.props.fetchedContacts()\n  }\n\n  render () {\n    return (\n      <ul className={styles.list}>\n        {this.props.renderedContacts.map(contact => {\n          return (\n            <li \n            className={styles.list__item}\n            key={contact.id}>\n              <span\n              className={styles.list__text}\n              >{contact.name}: {contact.number}</span>\n              <button\n              id={contact.id}\n              className={styles.list__button}\n              type=\"button\"\n              onClick={this.props.deletedContactbyId}\n              >delete</button>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nContactList.propTypes = {\n    renderedContacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  renderedContacts: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deletedContactbyId: event => {dispatch(deletedContact(event.currentTarget.id))},\n  fetchedContacts: () => {dispatch(fetchContacts())},\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n// const mapStateToProps = state => {\n//   const { contacts } = state;\n  \n//   if(contacts.filter) {\n//     const normalizedFilter = contacts.filter.toLowerCase(); \n//     const filtredContacts = contacts.items.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n//     return {\n//       renderedContacts: filtredContacts,\n//     }\n//   }  \n\n//   return {\n//     renderedContacts: contacts.items,\n//   }\n// }","import { Component } from \"react\";\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n\n  render () {\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n// import types from './phonebook-types';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deletedContactRequest,\n    deletedContactSuccess,\n    deletedContactError,\n    filteredContact\n} from '../actions/phonebook-actions';\n\nconst initialState = [\n    // {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    // {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    // {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    // {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n];\n\nconst contactReducer = createReducer(initialState, {\n    [fetchContactSuccess]: (state, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deletedContactSuccess]: (state, { payload }) => state.filter(contact => contact.id !== payload),\n})\n\nconst filterReducer = createReducer('', {\n    [filteredContact]: (_, { payload }) => payload,\n})\n\nconst loadingReducer = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deletedContactRequest]: () => true,\n    [deletedContactSuccess]: () => false,\n    [deletedContactError]: () => false,\n})\n\nexport default combineReducers({\n    items: contactReducer,\n    filter: filterReducer,\n    loading: loadingReducer\n})\n\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport phonebookReducer from './actions/phonebook-reducer';\nimport { \n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER } from 'redux-persist';\n\n\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    },\n  }),\n  logger];\n\n\nconst store = configureStore({\n    reducer: {\n        contacts: phonebookReducer,\n    },\n    middleware, \n    devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}>  */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}