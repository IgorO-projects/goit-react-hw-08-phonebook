{"version":3,"sources":["views/LoginView.module.css","views/LoginView.js"],"names":["module","exports","LoginView","state","email","password","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","this","onSubmit","className","styles","form","autoComplete","label","type","onChange","Component","mapDispatchToProps","logIn","connect"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,2B,gICKnDC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAW1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,QAAQ,EAAKZ,OACxB,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,4CAMjD,WACE,MAA4BW,KAAKb,MAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,gCACE,uHAEA,uBAAMY,SAAUD,KAAKL,aAAcO,UAAWC,IAAOC,KAAMC,aAAa,MAAxE,UACE,wBAAOH,UAAWC,IAAOG,MAAzB,2CAEE,uBACEC,KAAK,QACLf,KAAK,QACLC,MAAOL,EACPoB,SAAUR,KAAKV,kBAInB,wBAAOY,UAAWC,IAAOG,MAAzB,iDAEE,uBACEC,KAAK,WACLf,KAAK,WACLC,MAAOJ,EACPmB,SAAUR,KAAKV,kBAInB,wBAAQiB,KAAK,SAAb,sD,GAvDcE,aA6DlBC,EAAqB,CACzBX,QAASY,KAGIC,sBAAQ,KAAMF,EAAdE,CAAkC1B","file":"static/js/5.ef077701.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__36Z_2\",\"label\":\"LoginView_label__bNEGt\"};","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './LoginView.module.css';\nimport { logIn } from '../redux/auth/auth-operations';\n\n\nclass LoginView extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n  \n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n    // switch (name) {\n    //   case 'email':\n    //     return setEmail(value);\n    //   case 'password':\n    //     return setPassword(value);\n    //   default:\n    //     return;\n    // }\n  }\n  \n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n    this.setState({ name: '', email: '', password: '' });\n    // dispatch(authOperations.logIn({ email, password }));\n    // setEmail('');\n    // setPassword('');\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <h1>Страница логина</h1>\n  \n        <form onSubmit={this.handleSubmit} className={styles.form} autoComplete=\"off\">\n          <label className={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n  \n          <label className={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n  \n          <button type=\"submit\">Войти</button>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onLogin: logIn\n}\n\nexport default connect(null, mapDispatchToProps)(LoginView);\n\n"],"sourceRoot":""}